This Lab 1 was developed with openjdk 10.0.2 2018-07-17, using OpenJDK Runtime Environment (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4) and OpenJDK 64-Bit Server VM (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4, mixed mode). It was also tested using Java 10.0.2 2018-07-17, using Java(TM) SE Runtime Environment 18.3 (build 10.0.2+13) and Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.2+13, mixed mode).

Development was primarily in vim, with JGrasp used for debugging and some editing.

Lab2Main is the main program and the java class that should be executed. See analysis document for additional details. You may specify by the command line whether you would like to use a recursive or an iterative solve method, and you must specify the number of discs to solve for on the command line. Basic usage is:

Lab2Main method numDiscs outputFile [optimize]

method:		The solving method to use to calculate a solution to the problem. Either
		“recursive” or “iterative.
numDiscs:	The number of discs to solve for.
outputFile:	The file that output will be written to. Any existing file with the same name 
		will be overwritten.
optimize:	Optional. If “optimize” (without quotes) is provided as a fourth argument to
		the program and “recursive” is selected as the solving method, then a
		memoization implementation will be used to attempt to speed up the
		calculation of a solution. The program is likely to fail if memoization
		is enabled for numDiscs > 25 or 26.


Sample output files are provided for 5 discs and 10 discs using each solve method to demonstrate functionality and to provide example outputs. The output files grow quite large
as numDiscs increases, so please be aware of your operating environment and available storage resources when running this program.
